{{- if and .Values.zabbixServer.enabled (gt (.Values.zabbixServer.replicaCount | int) 1) false }}
{{- if .Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: Job
metadata:
  name: {{ template "zabbix.fullname" . }}-init-db-schema
  labels:
    app: {{ template "zabbix.fullname" . }}-init-db-schema
    app.kubernetes.io/name: init-db-schema
    helm.sh/chart: {{ include "zabbix.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}-init-db-schema
    app.kubernetes.io/managed-by: {{ .Release.Service }}-init-db-schema
    {{- if .Values.zabbixServer.jobDBSchema.jobLabels }}
    {{- toYaml .Values.zabbixServer.jobDBSchema.jobLabels | nindent 6 }}
    {{- end }}
  annotations:
    {{- range $key,$value := .Values.zabbixServer.jobDBSchema.jobAnnotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  metadata:
    labels:
      app: {{ template "zabbix.fullname" . }}-init-db-schema
      app.kubernetes.io/name: init-db-schema
      helm.sh/chart: {{ include "zabbix.chart" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}-init-db-schema
      app.kubernetes.io/managed-by: {{ .Release.Service }}-init-db-schema
      {{- if .Values.zabbixServer.jobDBSchema.jobLabels }}
      {{- toYaml .Values.zabbixServer.jobDBSchema.jobLabels | nindent 6 }}
      {{- end }}
    annotations:
      {{- range $key,$value := .Values.zabbixServer.jobDBSchema.jobAnnotations }}
      {{ $key }}: {{ $value | quote }}
      {{- end }}
  ttlSecondsAfterFinished: 120
  template:
    spec:
      {{- with .Values.zabbixServer.jobDBSchema.extraPodSpecs }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.karpenter.enabled }}
      {{- with .Values.karpenter.labels }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- else }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.zabbixServer.jobDBSchema.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}      
      containers:
        {{- with .Values.zabbixServer.jobDBSchema.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      - name: init-db-schema
        {{- if .Values.zabbixServer.image.tag }}
        image: "{{ .Values.zabbixServer.image.repository }}:{{ .Values.zabbixServer.image.tag }}"
        {{- else }}
        image: "{{ .Values.zabbixServer.image.repository }}:{{ .Values.zabbixImageTag }}"
        {{- end }}
        securityContext:
          {{- toYaml .Values.zabbixServer.jobDBSchema.securityContext | nindent 10 }}
        env:
          {{- include "zabbix.postgresAccess.variables" (list $ . "zabbix") | nindent 10 }}
          {{- with .Values.zabbixServer.extraEnv }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          - name: ZBX_AUTOHANODENAME
            value: "hostname"
          - name: ZBX_NODEADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        {{- with .Values.zabbixServer.jobDBSchema.extraVolumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        command:
          - "/bin/sh"
          - "-c"
          - 'export V=$(zabbix_server -V | head -n 1 | sed "s/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\)/\1/"); if [ "$V" = "`echo -e "$V\n6.2.6" | sort -V | head -n1`" ]; then sed -e "s/^exec \"\$@\"$/prepare_server/" -e "/^ *update_zbx_config$/d" /usr/bin/docker-entrypoint.sh >~/docker-entrypoint.sh && bash ~/docker-entrypoint.sh; else /usr/bin/docker-entrypoint.sh init_db_only; fi'
      imagePullSecrets:
      {{- range .Values.zabbixServer.image.pullSecrets }}
        - name: {{ . | quote }}
      {{- end }}
      restartPolicy: Never
      {{- with .Values.zabbixServer.jobDBSchema.extraVolumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
